# -*- coding: utf-8 -*-

from flask_cors import CORS, cross_origin
from flask import Response
from urllib.parse import urlparse 
import re
import os
import json
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ª–∏–±—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–ª–≥—Ä–∞–º–æ–º
import telebot
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
import configure.index as config
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ–ª–∞—Å–∫–∞
from flask import Flask, request, abort
# –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–¥
import db
# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
import configure.const as const	
import urllib

bot = telebot.TeleBot(config.token)
	
server = Flask(__name__)
CORS(server, supports_credentials=True)

# C—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def start(message):
	bot.send_message(message.chat.id, '<strong> ' + message.from_user.first_name + ', c–ø–∞—Å–∏–±–æ, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! ‚úåÔ∏è</strong>\n\nVkFeedBot —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –ª–µ–Ω—Ç—ã VK –≤–Ω—É—Ç—Ä–∏ Telegram.', parse_mode="HTML")
	db.addUser(message.chat.id)
	bot.send_message(int(message.chat.id), getCommandList(), parse_mode="HTML")


# –•–µ–ª–ø –±–æ—Ç–∞
@bot.message_handler(commands=['help'])
def help(message):
	bot.send_message(int(message.chat.id), getCommandList(), parse_mode="HTML")


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã VK
@bot.message_handler(commands=['addlink'])
def addlink(message):
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ URL –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –¥–æ–±–∞–≤–∏—Ç—å?")
	db.changeStatus(message.chat.id, const.status[const.ADDING_LINK])


# –£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã VK
@bot.message_handler(commands=['removelink'])
def removelink(message):
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ URL –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å?")
	db.changeStatus(message.chat.id, const.status[const.REMOVING_LINK])


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(func=lambda message: True, content_types=['text'])
def echo_message(message):
	# –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
	status = db.getStatus(message.chat.id)
	if status == const.status[const.UNACTIVE]:
		# –ï—Å–ª–∏ –º—ã "–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã"
		bot.send_message(message.chat.id, "–ê—Å—å?–ù–µ —Å–ª—ã—à—É!")

	elif status == const.status[const.ADDING_LINK]:
		message.text = message.text.lower()

		if message.text == "–æ—Ç–º–µ–Ω–∞":
			# –ï—Å–ª–∏ –º—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ
			db.changeStatus(message.chat.id, const.status[const.UNACTIVE])
			bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.")
			return 

		# –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É, —Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –µ–µ –∏ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—å
		if checkURL(message.text):
			# –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å + –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
			db.changeStatus(message.chat.id, const.status[const.UNACTIVE])
			
			# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
			linkStatus = db.addLink(pathParser(message.text).path[1:], message.chat.id)
			if linkStatus == 0:
				# –í—Å–µ —Ö–æ—Ä–æ—à–æ
				bot.send_message(message.chat.id, "–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚úÖ")
			elif linkStatus == 1:
				bot.send_message(message.chat.id, "–ì—Ä—É–ø–ø–∞ —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
			elif linkStatus == -1:
				bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã")

		else:
			bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –¥–∞–Ω–Ω—ã—Ö.\n–î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ <strong>'–û—Ç–º–µ–Ω–∞'</strong>", parse_mode="HTML")

	elif status == const.status[const.REMOVING_LINK]:
		message.text = message.text.lower()

		if message.text == "–æ—Ç–º–µ–Ω–∞":
			# –ï—Å–ª–∏ –º—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ
			db.changeStatus(message.chat.id, const.status[const.UNACTIVE])
			bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.")
			return 

		# –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É, —Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –µ–µ –∏ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç
		if checkURL(message.text):
			# –ú–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç –≥—Ä—É–ø–ø—É, —Ç–æ —É–¥–∞–ª—è–µ—Ç –µ–µ
			db.changeStatus(message.chat.id, const.status[const.UNACTIVE])

			linkStatus = db.removeLink(pathParser(message.text).path[1:])
			
			if linkStatus == 0:
				# –í—Å–µ –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ
				bot.send_message(message.chat.id, "–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ ‚úÖ")
			elif linkStatus == 1:
				# –ù–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –≥—Ä—É–ø–ø—ã
				bot.send_message(message.chat.id, "–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç üò≤")
			elif linkStatus == -1:
				# –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
				bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã")				
			
		else:
			bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –¥–∞–Ω–Ω—ã—Ö.\n–î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ <strong>'–û—Ç–º–µ–Ω–∞'</strong>", parse_mode="HTML")

	else:
		bot.send_message(message.chat.id, "–ê—Å—å?–ù–µ —Å–ª—ã—à—É!")


def checkURL(url):
	result = pathParser(url)
	if result.path != "" and 'vk.com' in result.netloc:
		return True
	else:
		return False

def pathParser(url):
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ url —Å—Ç—Ä–æ–∫–µ
	if '//' not in url:
		url = '%s%s' % ('http://', url)

	return urlparse(url)

# –í—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
def getCommandList():
	return "<strong>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</strong>" + "\n\n" + "<a>/addlink</a> - –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É VK\n" + "<a>/removelink</a> - –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É VK"

''' 
	–ù–∏–∂–µ –∏–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
'''

@server.route("/bot", methods=['POST'])
def getMessage():
	bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
	return "!", 200


@server.route("/getsubs", methods=['POST', 'OPTIONS'])
@cross_origin()
def sendGroups():
	''' –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã '''
	result = db.getSubs()
	
	# –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ 
	if result == -1:
		abort(400)

	return json.dumps(result)

@server.route("/setupdates", methods=['POST', 'OPTIONS'])
@cross_origin()
def setupdates():
	''' –ù–∞ –≤—Ö–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å'''
	content = request.get_json()

	for post in content['content']: 
		users = db.update(post, content['url'])
		for user in users:
			bot.send_message(user, "<strong>–ü–æ—Å—Ç—É–ø–∏–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å {}:</strong> \n\n {} \n\n {}".format(content['title'], post['text'], post['url']), parse_mode="HTML")
				
				
	return json.dumps({'status': 'ok'})

@server.route("/")
def webhook():
	bot.remove_webhook()
	# Server url
	bot.set_webhook(url="https://onfeedvkbot.herokuapp.com/bot")
	membsers = db.getCount("users")
	subs = db.getCount("subs")

	return "<strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</strong> {}<br> <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø:</strong> {}".format(membsers, subs) , 200

server.run(host="0.0.0.0", port=os.environ.get('PORT', 5000))
server = Flask(__name__)